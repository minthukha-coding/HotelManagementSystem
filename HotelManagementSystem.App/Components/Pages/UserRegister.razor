@rendermode RenderMode.InteractiveServer
@page "/register"
@layout EmptyLayout
@using HotelManagementSystem.Domain.Features.User
@using HotelManagementSystem.Shared
@using MudBlazor
@inject NavigationManager Navigation
@inject Domain.Features.User.UserServices _userService
@inject ISnackbar Snackbar


<MudContainer MaxWidth="MaxWidth.Small" Class="mt-8">
    <MudPaper Class="pa-4">
        <MudText Typo="Typo.h5" Class="mb-4 text-center">Register</MudText>

        <MudForm @ref="form">
            <MudGrid>
                <MudItem xs="12" Class="mb-4">
                    <MudTextField Label="Username" @bind-Value="username" Required="true" Immediate="true" Variant="Variant.Outlined" FullWidth="true" />
                </MudItem>
                <MudItem xs="12" Class="mb-4">
                    <MudTextField Label="Password" @bind-Value="password" Type="password" Required="true" Immediate="true" Variant="Variant.Outlined" FullWidth="true" />
                </MudItem>
                <MudItem xs="12" Class="mb-4">
                    <MudSelect T="string" Label="Role" @bind-Value="role" Required="true" Variant="Variant.Outlined" FullWidth="true">
                        <MudSelectItem T="string" Value="@("Admin")">Admin</MudSelectItem>
                        <MudSelectItem T="string" Value="@("User")">Admin</MudSelectItem>
                        <MudSelectItem T="string" Value="@("Staff")">Admin</MudSelectItem>
                    </MudSelect>
                </MudItem>
                <MudItem xs="12" Class="text-center">
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="HandleValidSubmit" FullWidth="true">
                        Register
                    </MudButton>
                </MudItem>
            </MudGrid>
        </MudForm>
    </MudPaper>
</MudContainer>

@code {
    private MudForm form;
    private string username;
    private string password;
    private string role;


    private async Task<Result<UserModel>> HandleValidSubmit()
    {
        var model = new Result<UserModel>();

        var reqModel = new UserModel
            {
                Username = username,
                PasswordHash = password,
                Role = role
            };

        model = await _userService.Register(reqModel);

        if (model!.IsSuccess)
        {
            Snackbar.Add("Register successful!", Severity.Success);
            Navigation.NavigateTo("/");

            model = new Result<UserModel>
                {
                    IsSuccess = true,
                    Data = new UserModel
                    {
                        UserId = model.Data!.UserId,
                        Username = model.Data.Username,
                        Email = model.Data.Email,
                        PasswordHash = model.Data.PasswordHash,
                        Role = model.Data.Role,
                        CreatedAt = model.Data.CreatedAt
                    }
                };
        }
        else
        {
            Snackbar.Add("Register failed!", Severity.Error);
            Navigation.NavigateTo("/");
        }

        return model;
    }
}
