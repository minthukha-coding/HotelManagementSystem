@page "/customer-chat"
@inject ChatService ChatService

<h3>Customer Chat</h3>

<MudTextField @bind-Value="UserName" Label="Your Name" Variant="Variant.Outlined" FullWidth="true" Margin="Margin.Dense" />

<MudTextField @bind-Value="Message" Label="Type a message..." Variant="Variant.Outlined" Multiline="true" Rows="4" FullWidth="true" Margin="Margin.Dense" />

<MudButton OnClick="SendMessage" Variant="Variant.Filled" Color="Color.Primary" FullWidth="true" Margin="Margin.Dense">
    Send
</MudButton>

<MudItem>
    @foreach (var msg in Messages)
    {
        <MudItem>
            <MudText Typo="Typo.body1">
                <strong>@msg.SenderType (@msg.User:</strong> @msg.Text
            </MudText>
        </MudItem>
    }
</MudItem>

@code {
    private string UserName = "Customer";
    private string Message;
    private List<(string SenderType, string User, string Text)> Messages = new();

    protected override async Task OnInitializedAsync()
    {
        ChatService.OnMessageReceived += async (senderType, user, message) =>
              {
                  await InvokeAsync(() =>
                  {
                      Messages.Add((senderType, user, message));
                      StateHasChanged();
                  });
              };

        await ChatService.StartConnectionAsync("https://localhost:7014", "Customer");
    }

    private async Task SendMessage()
    {
        await ChatService.SendMessageAsync(UserName, Message);
        Message = string.Empty;
    }

    public async ValueTask DisposeAsync()
    {
        await ChatService.StopConnectionAsync();
    }
}